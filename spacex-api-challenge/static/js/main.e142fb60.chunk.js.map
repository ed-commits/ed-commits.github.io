{"version":3,"sources":["components/LaunchItem.tsx","components/LaunchList.tsx","components/SortButton.tsx","components/FilterDialog.tsx","assets/spacex-logo.png","assets/img/launch-home.png","SpaceXAPI.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LaunchItem","number","name","date","ship","className","Intl","DateTimeFormat","year","month","day","format","LaunchList","dateRange","array","rev","items","descendingOrder","yearRangeFilter","slice","reverse","filter","item","beginDate","endDate","map","SortButton","descending","setDescending","Button","variant","endIcon","onClick","FilterDialog","setYearFilter","useState","option","setOption","open","setOpen","handleClose","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","FormControl","Select","value","onChange","event","target","endpoints","split","length","startDate","Date","getFullYear","parseDateRange","input","Input","MenuItem","DialogActions","color","processSpaceXAPIItem","useStyles","makeStyles","theme","button","margin","spacing","background","fontFamily","fontSize","buttonOnRHS","float","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","App","classes","launchList","setLaunchList","setYearRangeFilter","inProgress","setInProgress","reloadData","fetch","method","then","res","json","useEffect","src","spacexLogo","alt","clsx","launchHome","CircularProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e142fb60.chunk.js","sourcesContent":["import React from 'react';\nimport { FunctionComponent } from 'react';\n\ntype LaunchProps = {\n    number: number,\n    name: string,\n    date: Date,\n    ship: string\n}\n\nexport type { LaunchProps };\n\nexport const LaunchItem: FunctionComponent<LaunchProps> = ({ number, name, date, ship }) =>\n    <div className=\"item\">\n        <span className=\"item__number\">#{number}</span>\n        <span className=\"item__name\">{name}</span>\n        <div className=\"item__subinfo\">\n            <span className=\"item__date\">{new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\"\n            }).format(date)}</span>\n            <span className=\"item__ship\">{ship}</span>\n        </div>\n    </div>\n\n","import React from 'react';\nimport { FunctionComponent } from 'react';\nimport { LaunchProps, LaunchItem } from './LaunchItem';\n\nfunction reverseIf(array: any[], rev: boolean) {\n    if (rev) {\n        return array.slice(0).reverse();\n    }\n    else {\n        return array;\n    }\n}\n\nfunction byDateRange(dateRange : null | [Date, Date]) {\n    return function (item : LaunchProps) {\n        if (dateRange == null) {\n            return true;\n        }\n        else {\n            let beginDate = dateRange[0];\n            let endDate = dateRange[1];\n            return beginDate <= item.date && item.date < endDate;\n        }\n    }\n}\n\nexport const LaunchList: FunctionComponent<{ items: Array<LaunchProps>, descendingOrder: boolean, yearRangeFilter: null | [Date, Date] }> = ({ items, descendingOrder, yearRangeFilter }) =>\n    <ul>\n        {reverseIf(items, !descendingOrder)\n            .filter(byDateRange(yearRangeFilter))\n            .map(item => (\n                <li>\n                    <LaunchItem\n                        number={item.number}\n                        name={item.name}\n                        date={item.date}\n                        ship={item.ship}\n                    />\n                </li>))}\n    </ul>\n","import React from 'react';\nimport { FunctionComponent } from 'react';\n\nimport SortIcon from '@material-ui/icons/ImportExport';\nimport Button from '@material-ui/core/Button';\n\ntype SortButtonProps = {\n    className: string,\n    descending: boolean,\n    setDescending: any\n}\n\nexport const SortButton: FunctionComponent<SortButtonProps> = ({ className, descending, setDescending }) =>\n    <Button\n        variant=\"contained\"\n        className={className}\n        endIcon={<SortIcon />}\n        onClick={() => setDescending(!descending)}\n    >Sort {descending ? \"Descending\" : \"Ascending\"}</Button>\n","import React from 'react';\nimport { FunctionComponent } from 'react';\nimport { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport SelectIcon from '@material-ui/icons/ArrowDropDown';\nimport Button from '@material-ui/core/Button';\n\ntype FilterDialogProps = {\n    className: string,\n    setYearFilter: any,\n}\n\nexport const FilterDialog: FunctionComponent<FilterDialogProps> = function ({ className, setYearFilter }) {\n    const [option, setOption] = useState(\"0-3000\");\n    const [open, setOpen] = useState(false);\n\n    const parseDateRange = (dateRange : string) : null | [Date, Date] => {\n        let endpoints = dateRange.split(/-/);\n        if(endpoints.length == 2) {\n            let startDate = endpoints[0] === \"today\" ? new Date() : new Date(endpoints[0]);\n            let endDate = new Date(endpoints[1]);\n            return [startDate, new Date(endDate.getFullYear(), 11, 31)]\n        }\n        else {\n            return null;\n        }\n    }\n\n    const handleChange = (event: any) => {\n        setOption(event.target.value);\n        setYearFilter(parseDateRange(event.target.value))\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return <>\n        <Button\n            variant=\"contained\"\n            className={className}\n            endIcon={<SelectIcon />}\n            onClick={handleOpen}\n        > Filter by Year</Button >\n\n        <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n            <DialogTitle>Filter by Year</DialogTitle>\n            <DialogContent>\n                    <FormControl>\n                        <Select\n                            value={option}\n                            onChange={handleChange}\n                            input={<Input />}\n                        >\n                            <MenuItem value=\"0-3000\">Any year</MenuItem>\n                            <MenuItem value=\"2006-2010\">2006 to 2010</MenuItem>\n                            <MenuItem value=\"2010-2015\">2010 to 2015</MenuItem>\n                            <MenuItem value=\"2015-2020\">2015 to 2020</MenuItem>\n                            <MenuItem value=\"2020-2020\">2020</MenuItem>\n                            <MenuItem value=\"today-3000\">Upcoming</MenuItem>\n                        </Select>\n                    </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n          </Button>\n                <Button onClick={handleClose} color=\"primary\">\n                    Ok\n          </Button>\n            </DialogActions>\n        </Dialog>\n\n    </>\n}\n","export default __webpack_public_path__ + \"static/media/spacex-logo.e755fcbf.png\";","export default __webpack_public_path__ + \"static/media/launch-home.b539e3f9.png\";","import { LaunchProps } from './components/LaunchItem';\n\nexport const spaceXAPIEndpoint = \"https://api.spacexdata.com/v3/launches\";\n\nexport function processSpaceXAPIItem(item : any) : LaunchProps {\n    return {\n        number: item[\"flight_number\"],\n        name: item[\"mission_name\"],\n        date: new Date(item[\"launch_date_utc\"]),\n        ship: item[\"rocket\"][\"rocket_name\"],\n    }\n}\n\nexport function processSpaceXAPI(item : any) {\n    return item.map(processSpaceXAPIItem);\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.scss';\n\nimport { LaunchProps } from './components/LaunchItem';\nimport { LaunchList } from './components/LaunchList';\nimport { SortButton } from './components/SortButton';\nimport { FilterDialog } from './components/FilterDialog';\n\nimport spacexLogo from './assets/spacex-logo.png';\nimport launchHome from './assets/img/launch-home.png';\n\nimport RefreshIcon from '@material-ui/icons/Replay';\n//import SortIcon from '@material-ui/icons/ImportExport';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { spaceXAPIEndpoint, processSpaceXAPI } from './SpaceXAPI';\n//import { spaceXTestData } from './SpaceXAPITestData';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    background: \"#215184\",\n    '&:hover': {\n      background: \"#3c87b3\",\n    },\n    color: '#FFFFFF',\n    fontFamily: 'Brandon Grotesque',\n    fontSize: '0.8rem',\n  },\n  buttonOnRHS: {\n    margin: theme.spacing(0),\n    float: 'right',\n    borderTopLeftRadius: '15px',\n    borderBottomLeftRadius: '15px',\n    borderTopRightRadius: '0px',\n    borderBottomRightRadius: '0px',\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [launchList, setLaunchList] = useState<LaunchProps[]>([]) //processSpaceXAPI(spaceXTestData));\n\n  const [descending, setDescending] = useState(true);\n  const [yearRangeFilter, setYearRangeFilter] = useState<null | [Date, Date]>(null);\n\n  const [inProgress, setInProgress] = useState(false);\n\n  const reloadData = () => {\n    setInProgress(true);\n    fetch(spaceXAPIEndpoint, { method: \"GET\" })\n      .then(res => res.json())\n      .then(res => {\n        setInProgress(false);\n        setLaunchList(processSpaceXAPI(res));\n      })\n  }\n\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <img src={spacexLogo} className=\"header-bar__logo\" alt=\"logo\" />\n        <span className=\"header-bar__label\">LAUNCHES</span>\n\n        <Button\n          variant=\"contained\"\n          className={clsx(classes.button, classes.buttonOnRHS)}\n          endIcon={<RefreshIcon />}\n          onClick={reloadData}\n        >Reload Data</Button>\n\n      </header>\n\n      <div className=\"main\">\n        <div className=\"main__graphic-container\">\n          <img src={launchHome} className=\"main__graphic\" alt=\"rocket launch graphic\" />\n        </div>\n        <div className=\"main__launch-list\">\n          <div className=\"main__sorting-controls\">\n\n            <FilterDialog setYearFilter={setYearRangeFilter} className={classes.button} />\n            <SortButton descending={descending} setDescending={setDescending} className={classes.button} />\n          </div>\n          {inProgress\n            ? <div className=\"launch-list__progress-indicator\">\n              <CircularProgress />\n            </div>\n            : <></>}\n          <LaunchList items={launchList} descendingOrder={descending} yearRangeFilter={yearRangeFilter} />\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}